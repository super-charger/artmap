// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum ExhibitionStatus {
  UPCOMING
  ONGOING
  ENDED
}

model Exhibition {
  id        String           @id
  title     String
  startDate DateTime
  endDate   DateTime
  place     String
  area      String
  thumbnail String?
  gpsX      String
  gpsY      String
  status    ExhibitionStatus

  likes  Like[]
  visits Visit[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id     String  @id @default(uuid())
  email  String  @unique
  name   String?
  likes  Like[]
  visits Visit[]
}

model Like {
  id           String     @id @default(uuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  exhibition   Exhibition @relation(fields: [exhibitionId], references: [id])
  exhibitionId String

  createdAt DateTime @default(now())

  @@unique([userId, exhibitionId])
}

model Visit {
  id           String     @id @default(uuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  exhibition   Exhibition @relation(fields: [exhibitionId], references: [id])
  exhibitionId String
  visitDate    DateTime

  createdAt DateTime @default(now())

  @@unique([userId, exhibitionId])
}
